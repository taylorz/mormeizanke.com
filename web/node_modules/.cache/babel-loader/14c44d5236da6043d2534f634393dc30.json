{"ast":null,"code":"import _slicedToArray from \"/Users/taylorzanke/Documents/code/office/mormeizanke.com/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/taylorzanke/Documents/code/office/mormeizanke.com/src/App.js\";\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport Grid from '@material-ui/core/Grid';\nimport AppWrapper from './components/AppWrapper/AppWrapper';\nimport Nav from './components/Nav/Nav';\nimport Homepage from './pages/Homepage/Homepage';\nimport Poetry from './pages/Poetry/Poetry';\nimport Essays from './pages/Essays/Essays';\nimport Podcasts from './pages/Podcasts/Podcasts';\nimport Reviews from './pages/Reviews/Reviews';\nimport Drawings from './pages/Drawings/Drawings';\nimport About from './pages/About/About';\nimport Contact from './pages/Contact/Contact';\nimport createHistory from 'history/createBrowserHistory';\nconst routes = [{\n  path: '/',\n  name: 'Home',\n  Component: Homepage\n}, {\n  path: '/about',\n  name: 'About',\n  Component: About\n}, {\n  path: '/contact',\n  name: 'Contact',\n  Component: Contact\n}, {\n  path: '/poetry',\n  name: 'Poetry',\n  Component: Poetry\n}, {\n  path: '/essays',\n  name: 'Essays',\n  Component: Essays\n}, {\n  path: '/podcasts',\n  name: 'Podcasts',\n  Component: Podcasts\n}, {\n  path: '/reviews',\n  name: 'Reviews',\n  Component: Reviews\n} // { path: '/drawings', name: 'Drawings', Component: Drawings },\n];\nconst history = createHistory();\nexport default (() => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        mobileNavOpen = _useState2[0],\n        setMobileNavOpen = _useState2[1];\n\n  return React.createElement(Router, {\n    history: history,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(AppWrapper, {\n    className: mobileNavOpen && \"wrapper-nav-open\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    mobileNavOpen: mobileNavOpen,\n    closeNav: () => setMobileNavOpen(false),\n    toggleNav: () => setMobileNavOpen(!mobileNavOpen),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Route, {\n    render: ({\n      location\n    }) => {\n      const key = location.key;\n      return React.createElement(TransitionGroup, {\n        component: null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(CSSTransition, {\n        key: key,\n        appear: true,\n        classNames: \"my-node\",\n        timeout: {\n          enter: 1500,\n          exit: 500\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        location: location,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, routes.map(({\n        path,\n        Component\n      }) => React.createElement(Route, {\n        key: path,\n        exact: true,\n        path: path,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, ({\n        match\n      }) => React.createElement(\"div\", {\n        className: \"my-node\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Component, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })))))));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })))));\n});","map":{"version":3,"sources":["/Users/taylorzanke/Documents/code/office/mormeizanke.com/src/App.js"],"names":["React","useState","BrowserRouter","Router","Route","Switch","CSSTransition","TransitionGroup","Grid","AppWrapper","Nav","Homepage","Poetry","Essays","Podcasts","Reviews","Drawings","About","Contact","createHistory","routes","path","name","Component","history","mobileNavOpen","setMobileNavOpen","location","key","enter","exit","map","match"],"mappings":"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","sourcesContent":["import React, { useState }  from 'react';\nimport { BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport Grid from '@material-ui/core/Grid';\nimport AppWrapper from './components/AppWrapper/AppWrapper'\nimport Nav from './components/Nav/Nav'\nimport Homepage from './pages/Homepage/Homepage';\nimport Poetry from './pages/Poetry/Poetry';\nimport Essays from './pages/Essays/Essays';\nimport Podcasts from './pages/Podcasts/Podcasts';\nimport Reviews from './pages/Reviews/Reviews';\nimport Drawings from './pages/Drawings/Drawings';\nimport About from './pages/About/About';\nimport Contact from './pages/Contact/Contact';\nimport createHistory from 'history/createBrowserHistory'\n\nconst routes = [\n  { path: '/', name: 'Home', Component: Homepage },\n  { path: '/about', name: 'About', Component: About },\n  { path: '/contact', name: 'Contact', Component: Contact },\n  { path: '/poetry', name: 'Poetry', Component: Poetry },\n  { path: '/essays', name: 'Essays', Component: Essays },\n  { path: '/podcasts', name: 'Podcasts', Component: Podcasts },\n  { path: '/reviews', name: 'Reviews', Component: Reviews },\n  // { path: '/drawings', name: 'Drawings', Component: Drawings },\n]\nconst history = createHistory()\nexport default () => {\n  const [mobileNavOpen, setMobileNavOpen] = useState(false)\n  return(\n    <Router history={history}>\n      <AppWrapper className={mobileNavOpen && \"wrapper-nav-open\"}>\n        <Grid container>\n          <Grid item xs={12} sm={2}>\n            <Nav mobileNavOpen={mobileNavOpen} closeNav={() => setMobileNavOpen(false)} toggleNav={() => setMobileNavOpen(!mobileNavOpen)}/>\n          </Grid>\n          <Grid item xs={12} sm={8}>\n            <Route\n              render={({ location }) => {\n              const {key} = location\n\n                return(\n                  <TransitionGroup component={null}>\n                      <CSSTransition\n                        key={key}\n                        appear={true}\n                        classNames=\"my-node\"\n                        timeout={{enter: 1500, exit: 500}}\n                      >\n                      <Switch location={location}>\n                        {routes.map(({ path, Component }) => (\n                          <Route key={path} exact path={path}>\n                            {({ match }) => (\n                              <div className=\"my-node\">\n                                <Component/>\n                              </div>\n                            )}\n                          </Route>\n                        ))}\n                      </Switch>\n                    </CSSTransition>\n                  </TransitionGroup>\n                )\n              }}\n            />\n          </Grid>\n        </Grid>\n      </AppWrapper>\n    </Router>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}